!function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}var installedModules={};__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{configurable:!1,enumerable:!0,get:getter})},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=91)}({49:function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function search(name){return list.find(function(p){return"number"==typeof name?p.code===name:name.toUpperCase()===p.shortForm||!!p.names.find(function(n){return n.toLowerCase()===name.toLowerCase()})})||!1}Object.defineProperty(exports,"__esModule",{value:!0}),exports.list=exports.Province=void 0;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();exports.search=search;var _provinces=__webpack_require__(93),provs=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_provinces),Province=exports.Province=function(){function Province(){_classCallCheck(this,Province)}return _createClass(Province,[{key:"containsFSA",value:function(fsa){return!!this.FSA&&(fsa=fsa.substring(0,1),"string"==typeof this.FSA?fsa===this.FSA:!!this.FSA.find(function(f){return f===fsa}))}}]),Province}(),list=exports.list=Object.keys(provs).filter(function(p){return!!parseInt(p)}).map(function(provCode){var P=new Province;return Object.assign(P,provs[provCode]),P})},91:function(module,exports,__webpack_require__){"use strict";function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0}),exports.GeoSearch=exports.SearchConfig=void 0;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_query=__webpack_require__(92),_provinces=__webpack_require__(49),_types=__webpack_require__(94),SearchConfig=exports.SearchConfig=function SearchConfig(uConfig){_classCallCheck(this,SearchConfig),uConfig=uConfig||{},this.urls={geoLocateUrl:uConfig.geoLocateUrl?uConfig.geoLocateUrl:"https://geogratis.gc.ca/services/geolocation/${language}/locate",geoNameUrl:uConfig.geoNameUrl?uConfig.geoNameUrl:"https://geogratis.gc.ca/services/geoname/${language}/geonames.json?category=O"},this.language=uConfig.language?uConfig.language:"en",this.urls.geoLocateUrl=this.urls.geoLocateUrl.replace("${language}",this.language),this.urls.geoNameUrl=this.urls.geoNameUrl.replace("${language}",this.language),this.Type=(0,_types.make)(uConfig.includeTypes,uConfig.excludeTypes),this.sortByTypes=uConfig.sortByTypes?uConfig.sortByTypes:["PROV","TERR","CITY","TOWN","VILG","UNP"]},GeoSearch=exports.GeoSearch=function(_SearchConfig){function GeoSearch(){return _classCallCheck(this,GeoSearch),_possibleConstructorReturn(this,(GeoSearch.__proto__||Object.getPrototypeOf(GeoSearch)).apply(this,arguments))}return _inherits(GeoSearch,_SearchConfig),_createClass(GeoSearch,[{key:"input",value:function(value){if(!(!value||value.length<3||/^\d{3}$/.test(value))){this.query=value;var x=this.decompose(value);if(!0!==x)return this.results instanceof _provinces.Province?this.results:this.results?this.results.query(x):void 0}}},{key:"UI",value:function(config){return new _UI(this,config)}},{key:"radialComposition",value:function(q){if(/\s(?:near|près du)$/.test(q))return!0;var radialSplit=q.split("en"===this.language?" near ":" près du ").map(function(v){return v.trim()});if(2!==radialSplit.length)return!1;var radialV=radialSplit[1];if(this.isProvince(radialV))throw new Error("Cannot do radial search (near) with provinces.");var isLocateType=this.isLocateQuery(radialV),latlon=radialV.split(",").map(function(v){return parseFloat(v.trim())});return!isLocateType&&!latlon||(this.results=new _query.Search(this.urls),this.results.setRestriction(isLocateType||latlon),radialSplit[0])}},{key:"boundedComposition",value:function(q){if(/\s(?:in|au)$/.test(q))return!0;var boundedSplit=this.query.split("en"===this.language?" in ":" au ").map(function(v){return v.trim()});if(2!==boundedSplit.length)return!1;var boundV=boundedSplit[1],isLoc=this.hasProvinceOrLocateRestriction(boundV),bboxSplit=boundV.split(",").map(function(v){return parseFloat(v.trim())});if(isLoc instanceof _query.FSAQuery)throw new Error("Cannot do bounded search (in) with FSA codes at this time.");return!isLoc&&4!==bboxSplit.length||(this.results=new _query.Search(this.urls),this.results.setRestriction(isLoc||bboxSplit),boundedSplit[0])}},{key:"commaComposition",value:function(q){var commaSplit=this.query.split(",").map(function(v){return v.trim()});if(2!==commaSplit.length)return!1;var isProvince=this.isProvince(commaSplit[1]);return isProvince?(this.results=isProvince,commaSplit[0]):commaSplit[0]}},{key:"decompose",value:function(q){q=q.trim();var uniqueSearches=this.commaComposition(q)||this.boundedComposition(q)||this.radialComposition(q);return uniqueSearches||(this.results=new _query.Search(this.urls),q)}},{key:"hasProvinceOrLocateRestriction",value:function(q){var isProvince=this.isProvince(q),isLocateQuery=!isProvince&&this.isLocateQuery(q);return isProvince||isLocateQuery}},{key:"isProvince",value:function(q){return(0,_provinces.search)(q.trim())}},{key:"isLocateQuery",value:function(q){if(/^[ABCEGHJKLMNPRSTVXYabceghjklmnprstvxy]\d[A-Za-z]/.test(q)){var newQ=new _query.FSAQuery(this.urls);return newQ.query.bind(newQ,q.toUpperCase()),newQ}if(/^\d{2,3}[A-Pa-p]/.test(q)){var _newQ=new _query.NTSQuery(this.urls);return _newQ.query.bind(_newQ,q.toUpperCase()),_newQ}return!1}},{key:"typesInName",value:function(q){var _this2=this,regx=new RegExp(/.*(\((.+)\))/),regxResult=regx.exec(q);return!!regxResult&&(regxResult[2].split(",").map(function(type){var checkedType=_this2.Type.isValid(type);checkedType&&_this2.Type.validSet.push(checkedType)}),q.replace(regxResult[1],""))}}]),GeoSearch}(SearchConfig),_UI=function(){function _UI(search,config){_classCallCheck(this,_UI),this.search=search,this.docFrag=document.createDocumentFragment(),this.makeConfig(config||{}),this.domBindings()}return _createClass(_UI,[{key:"makeConfig",value:function(config){this.resultHandler=config.handleResults?config.handleResults.bind(this):this.defaultResultHandler,this.featureHandler=config.handleFeatures?config.handleFeatures.bind(this):this.defaultFeatureHandler,this.inputElem=config.inputElem?config.inputElem:document.createElement("input"),this.resultElem=config.resultElem?config.resultElem:document.createElement("div"),this.featureElem=config.featureElem?config.featureElem:document.createElement("div")}},{key:"domBindings",value:function(){this.docFrag.appendChild(this.featureElem),this.docFrag.appendChild(this.resultElem),this.docFrag.appendChild(this.inputElem),this.inputElem.onkeyup=this.hasQueryChanged.bind(this)}},{key:"hasQueryChanged",value:function(evt){var _this3=this,qValue="string"==typeof evt?evt:evt.target.value;return qValue===this.inputValue?(setTimeout(function(){return _this3.hasQueryChanged(qValue)},200),!1):(this.inputValue=qValue,this.inputHasChanged(qValue),!0)}},{key:"inputHasChanged",value:function(query){for(var qValue=query;this.resultElem.firstChild;)this.resultElem.removeChild(this.resultElem.firstChild);for(;this.featureElem.firstChild;)this.featureElem.removeChild(this.featureElem.firstChild);var searchResult=this.search.input(qValue);searchResult&&(searchResult.then(console.error),searchResult instanceof _query.NTSQuery?searchResult.then(function(v){return console.error(v)}):searchResult instanceof _query.FSAQuery?searchResult.then(function(v){return console.error("FSA Result:",v)}):searchResult instanceof _query.Search?searchResult.then(function(v){return console.error(v)}):searchResult instanceof _provinces.Province&&console.error("Province: Result",searchResult))}},{key:"optimizeSortByType",value:function(sortByTypes){var returnObj={};return sortByTypes.forEach(function(x,i){returnObj[x]=i}),returnObj}},{key:"defaultResultHandler",value:function(results){var ul=document.createElement("ul");return results.reverse().forEach(function(r){var li=document.createElement("li");li.innerHTML=r.name+" ("+r.type.name+")"+(r.location?", "+r.location:"")+", "+r.province.name+" @ lat: "+r.latLon.lat+", lon: "+r.latLon.lon,ul.appendChild(li)}),ul}},{key:"defaultFeatureHandler",value:function(fR){}},{key:"htmlElem",get:function(){return this.docFrag}}]),_UI}();window&&(window.GeoSearch=GeoSearch)},92:function(module,exports,__webpack_require__){"use strict";function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function isLocateResult(result){return!result.items}function isNameResult(result){return result&&result.items}function isLatlong(result){return"object"===(void 0===result?"undefined":_typeof(result))&&result.lat&&result.lon}function isBbox(result){return"object"===(void 0===result?"undefined":_typeof(result))&&4===result.length&&result.every(function(v){return"number"==typeof v})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.FSAQuery=exports.NTSQuery=exports.Search=void 0;var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_provinces=__webpack_require__(49),Query=function(){function Query(urls){_classCallCheck(this,Query),this.urls=urls}return _createClass(Query,[{key:"jsonRequest",value:function(url){return new Promise(function(resolve,reject){var xobj=new XMLHttpRequest;xobj.open("GET",url,!0),xobj.responseType="json",xobj.onload=function(){200===xobj.status?resolve("string"==typeof xobj.response?JSON.parse(xobj.response):xobj.response):reject("Could not load results from remote service.")},xobj.send()})}}]),Query}(),baseNTSCache=(exports.Search=function(_Query){function Search(){_classCallCheck(this,Search);var _this=_possibleConstructorReturn(this,(Search.__proto__||Object.getPrototypeOf(Search)).apply(this,arguments));return _this.url=_this.urls.geoNameUrl,_this}return _inherits(Search,_Query),_createClass(Search,[{key:"setConcise",value:function(concise){this.url+="&concise="+concise.join(",")}},{key:"setRestriction",value:function(restrict){var rOnBbox=void 0,rOnLatlon=void 0,rOnProvince=void 0;restrict instanceof NTSQuery?rOnBbox=restrict.bbox:restrict instanceof FSAQuery?rOnLatlon=restrict.latlon:isLatlong(restrict)?rOnLatlon=restrict:restrict instanceof _provinces.Province?rOnProvince=restrict:isBbox(restrict)&&(rOnBbox=restrict),rOnBbox?this.url+="&bbox="+rOnBbox.join(","):rOnLatlon&&(this.url+="&lat="+rOnLatlon.lat+"&lon="+rOnLatlon.lon),rOnProvince&&(this.url+="&province="+rOnProvince.code)}},{key:"query",value:function(q){var _this2=this;return new Promise(function(resolve,reject){_this2.jsonRequest(_this2.url+(q?"&q="+q:"")).then(function(j){if(isNameResult(j)){var items=j.items;0===items.length&&reject("No results found."),resolve(items.map(function(i){var province=_provinces.list.find(function(p){return p.code===parseInt(i.province.code)});if(!province)throw new Error("Province code returned is invalid.");return{name:i.name,location:i.location,province:province,concise:i.concise.code,latlon:{lat:i.latitude,lon:i.longitude},bbox:i.bbox}}))}})})}}]),Search}(Query),{}),NTSQuery=exports.NTSQuery=function(_Query2){function NTSQuery(){_classCallCheck(this,NTSQuery);var _this3=_possibleConstructorReturn(this,(NTSQuery.__proto__||Object.getPrototypeOf(NTSQuery)).apply(this,arguments));return _this3.fullNTS={},_this3}return _inherits(NTSQuery,_Query2),_createClass(NTSQuery,[{key:"populate",value:function(result){var location=result.title.split(" "),fullNTSName=location.shift()||"",popI=fullNTSName===this.baseNTS?this:new NTSQuery(this.urls);popI.baseNTS=this.baseNTS,popI.location=location.join(" "),popI.latLon={lat:result.geometry.coordinates[1],lon:result.geometry.coordinates[0]},popI.bbox=result.bbox?result.bbox:[],popI!==this&&(this.fullNTS[fullNTSName]=popI)}},{key:"query",value:function(q){var _this4=this,originalQuery=q=q.toUpperCase(),takeFirstThree=q.substring(0,3);return 3!==takeFirstThree.length||parseInt(takeFirstThree[2])||(originalQuery=q="0"+q),q=q.substring(0,4),new Promise(function(resolve,reject){if(baseNTSCache[q])return void(q!==originalQuery?baseNTSCache[q].then(function(nts){return nts.fullNTS[originalQuery]?resolve(nts.fullNTS[originalQuery]):5===originalQuery.length?resolve(nts):reject("NTS not valid.")}):baseNTSCache[q].then(function(nts){return nts?resolve(nts):reject("NTS not valid.")}));_this4.baseNTS=q,baseNTSCache[_this4.baseNTS]=_this4.jsonRequest(_this4.urls.geoLocateUrl+"?q="+_this4.baseNTS).then(function(resp){return isLocateResult(resp)&&(resp.forEach(function(r){return _this4.populate(r)}),resolve(originalQuery===_this4.baseNTS?_this4:_this4.fullNTS[originalQuery])),reject("Not Found."),_this4})})}}]),NTSQuery}(Query),FSACache={},FSAQuery=exports.FSAQuery=function(_Query3){function FSAQuery(){return _classCallCheck(this,FSAQuery),_possibleConstructorReturn(this,(FSAQuery.__proto__||Object.getPrototypeOf(FSAQuery)).apply(this,arguments))}return _inherits(FSAQuery,_Query3),_createClass(FSAQuery,[{key:"query",value:function(q){var _this6=this;return this.fsa=q.substring(0,3).toUpperCase(),new Promise(function(resolve,reject){if(FSACache[_this6.fsa])return void FSACache[_this6.fsa].then(function(fsa){return resolve(fsa)}).catch(function(err){return reject("FSA not found.")});FSACache[_this6.fsa]=_this6.jsonRequest(_this6.urls.geoLocateUrl+"?q="+q).then(function(j){return isLocateResult(j)&&1===j.length&&(_this6.latlon={lat:j[0].geometry.coordinates[1],lon:j[0].geometry.coordinates[0]},_this6.provinces=_provinces.list.filter(function(p){return p.containsFSA(_this6.fsa||"")}),resolve(_this6)),reject("FSA not found."),_this6})})}}]),FSAQuery}(Query)},93:function(module,exports){module.exports={10:{shortForm:"NL",code:10,FSA:"A",names:["Newfoundland and Labrador","Terre-Neuve","Newfoundland","Terre-Neuve-et-Labrador"],latlon:{lat:53.230000000000075,lon:-59.99916699999994},bbox:[-69.2979017,43.7959255,-50.5509753,60.5493815]},11:{shortForm:"PE",code:11,FSA:"C",names:["Île-du-Prince-Édouard","Prince Edward Island"],latlon:{lat:46.50000000000006,lon:-62.99999999999994},bbox:[-64.495812,45.7683773,-61.979467,47.1505289]},12:{shortForm:"NS",code:12,FSA:"B",names:["Nouvelle-Écosse","Nova Scotia"],latlon:{lat:45.00007500000004,lon:-62.99932699999994},bbox:[-66.6950484,42.0904673,-59.099982,47.2596603]},13:{shortForm:"NB",code:13,FSA:"E",names:["Nouveau-Brunswick","New Brunswick"],latlon:{lat:46.50000000000006,lon:-65.99999999999994},bbox:[-69.186746,44.1908655,-63.4218125,49.5838722]},24:{shortForm:"QC",code:24,FSA:["G","H","J"],names:["Quebec","Québec"],latlon:{lat:52.00000000000006,lon:-71.99999999999994},bbox:[-81.4759555,41.7844685,-55.5837818,63.3712085]},35:{shortForm:"ON",code:35,FSA:["K","L","M","N","P"],names:["Ontario"],latlon:{lat:49.25000000000006,lon:-84.49999999999994},bbox:[-96.827612,38.8820195,-72.0266058,60.1901621]},46:{shortForm:"MB",code:46,FSA:"R",names:["Manitoba"],latlon:{lat:55.00000000000006,lon:-96.99999999999994},bbox:[-102.0127836,48.9937684,-88.985764,60.00453]},47:{shortForm:"SK",code:47,FSA:"S",names:["Saskatchewan"],latlon:{lat:54.00005100000004,lon:-106.00049599999994},bbox:[-110.0113663,48.9931784,-101.3568994,60.0055403]},48:{shortForm:"AB",code:48,FSA:"T",names:["Alberta"],latlon:{lat:54.991667000000064,lon:-114.37666699999994},bbox:[-120.0063852,48.9916763,-109.9997611,60.0054216]},59:{shortForm:"BC",code:59,FSA:"V",names:["Colombie-Britannique","British Columbia"],latlon:{lat:54.00000000000006,lon:-124.99999999999994},bbox:[-139.0661104,48.2192883,-114.0488086,60.0072268]},60:{shortForm:"YU",code:60,FSA:"Y",names:["Territoire du Yukon","Yukon Territory","Yukon"],latlon:{lat:63.00000000000006,lon:-134.99999999999994},bbox:[-141.0075553,59.9917241,-123.803383,69.65269]},61:{shortForm:"NT",code:61,FSA:"X",names:["Northwest Territories","Territoires du Nord-Ouest"],latlon:{lat:69.50030600000008,lon:-121.50222299999996},bbox:[-141.0083347,59.9915066,-101.995338,79.1354033]},62:{shortForm:"NU",code:62,FSA:"X",names:["Nunavut"],latlon:{lat:70.16666700000007,lon:-90.73333299999996},bbox:[-120.7905344,51.0607139,-59.6033935,83.6039779]}}},94:function(module,exports,__webpack_require__){"use strict";function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2}return Array.from(arr)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function make(include,exclude){var newType=new Type;return newType.filterValidTypes(include,exclude),newType}Object.defineProperty(exports,"__esModule",{value:!0}),exports.Type=void 0;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();exports.make=make;var _types=__webpack_require__(95),types=function(obj){if(obj&&obj.__esModule)return obj;var newObj={};if(null!=obj)for(var key in obj)Object.prototype.hasOwnProperty.call(obj,key)&&(newObj[key]=obj[key]);return newObj.default=obj,newObj}(_types),Type=exports.Type=function(){function Type(){var _this=this;_classCallCheck(this,Type),this.conciseToList={},this.filteredConciseToList={},this.flat=types,this.filteredFlat=types,this.validSet=[],Object.keys(types).forEach(function(p){_this.conciseToList[types[p]]||(_this.conciseToList[types[p]]=[]),_this.conciseToList[types[p]].push(p)}),Object.assign(this.filteredConciseToList,this.conciseToList)}return _createClass(Type,[{key:"isValid",value:function(type){return type=type.trim(),this.filteredConciseToList[type.toUpperCase()]?type.toUpperCase():!!this.filteredFlat[type.toLowerCase()]&&this.filteredFlat[type.toLowerCase()]}},{key:"filterValidTypes",value:function(include,exclude){var _this2=this;include="string"==typeof include?[include]:include,exclude="string"==typeof exclude?[exclude]:exclude;var setExclusion=include||exclude?include&&include.length>0||exclude&&exclude.length:null;if(null!==setExclusion){var typeSet=new Set(Object.keys(this.filteredConciseToList)),keySet=new Set(include||exclude),invalidKeys=new Set([].concat(_toConsumableArray(typeSet)).filter(function(x){return!setExclusion===keySet.has(x)})),_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _step,_iterator=invalidKeys[Symbol.iterator]();!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){var key=_step.value;this.filteredConciseToList[key].forEach(function(altName){delete _this2.filteredFlat[altName]}),delete this.filteredConciseToList[key]}}catch(err){_didIteratorError=!0,_iteratorError=err}finally{try{!_iteratorNormalCompletion&&_iterator.return&&_iterator.return()}finally{if(_didIteratorError)throw _iteratorError}}}return this.filteredConciseToList}}]),Type}()},95:function(module,exports){module.exports={FSA:"FSA","forward sortation area":"FSA","région de tri d'acheminement":"FSA",NTS:"NTS","national topographic system":"NTS","système national de référence cartographique":"NTS",prov:"PROV",province:"PROV",provinces:"PROV",terr:"TERR",territory:"TERR",territories:"TERR",territoire:"TERR",territoires:"TERR",city:"CITY",cities:"CITY","cité":"CITY",ville:"CITY",villes:"CITY",town:"TOWN",towns:"TOWN",borough:"TOWN",boroughs:"TOWN","separated town":"TOWN","separated towns":"TOWN",municipality:"TOWN",municipalities:"TOWN","municipalité de village":"TOWN","municipalité de villages":"TOWN",vilg:"VILG",village:"VILG",villages:"VILG",community:"VILG",communities:"VILG","summer village":"VILG","summer villages":"VILG","municipalité":"VILG","resort municipality":"VILG","resort municipalities":"VILG","resort village":"VILG","resort villages":"VILG","northern village":"VILG","northern villages":"VILG","urban community":"VILG","urban communities":"VILG","municipalité de canton":"VILG","municipalité de cantons":"VILG","municipalité de canton unis":"VILG","municipalité de paroisse":"VILG","municipalité de paroisses":"VILG","municipalité de village cri":"VILG","municipalité de village cris":"VILG","municipalité de village naskapi":"VILG","municipalité de village naskapis":"VILG","municipalité de village nordique":"VILG","municipalité de village nordiques":"VILG",ham:"HAM",hamlet:"HAM",hamlets:"HAM","organized hamlet":"HAM","organized hamlets":"HAM","northern hamlet":"HAM","northern hamlets":"HAM","northern settlement":"HAM","northern settlements":"HAM","charter community":"HAM","charter communities":"HAM",utm:"UTM",ltm:"LTM",stm:"STM",mun1:"MUN1","metropolitan municipality":"MUN1","metropolitan municipalities":"MUN1","municipal district":"MUN1","municipal districts":"MUN1","district municipality":"MUN1","district municipalities":"MUN1","regional district":"MUN1","regional districts":"MUN1",county:"MUN1",counties:"MUN1",region:"MUN1",regions:"MUN1","county municipality":"MUN1","county municipalities":"MUN1","restructured county":"MUN1","restructured counties":"MUN1","communauté urbaine":"MUN1","communauté urbaines":"MUN1","municipalité régionale de comté":"MUN1","municipal county":"MUN1","municipal counties":"MUN1","région administrative":"MUN1","région administratives":"MUN1",mun2:"MUN2","local government district":"MUN2","local government districts":"MUN2","township municipality":"MUN2","township municipalities":"MUN2","rural municipality":"MUN2","rural municipalities":"MUN2","improvement district":"MUN2","improvement districts":"MUN2","territoire non organisé":"MUN2","indian government district":"MUN2","indian government districts":"MUN2",unp:"UNP","police village":"UNP","police villages":"UNP","rural village":"UNP","rural villages":"UNP",settlement:"UNP",settlements:"UNP","compact rural community":"UNP","compact rural communities":"UNP",resort:"UNP",resorts:"UNP",locality:"UNP",localities:"UNP","lieu-dit":"UNP","lieu-dits":"UNP","railway point":"UNP","railway points":"UNP",station:"UNP",stations:"UNP","post office":"UNP","post offices":"UNP",landing:"UNP",landings:"UNP","abandoned locality":"UNP","abandoned localities":"UNP","dispersed rural community":"UNP","dispersed rural communities":"UNP",hameau:"UNP",hameaus:"UNP","northern community":"UNP","northern communities":"UNP","unincorporated village district":"UNP","unincorporated village districts":"UNP","vacated or seasonal settlement":"UNP","vacated or seasonal settlements":"UNP","station de chemin de fer":"UNP","station de chemin de fers":"UNP","établissement amérindien":"UNP","établissement amérindiens":"UNP",neighbourhood:"UNP",neighbourhoods:"UNP","suburban community":"UNP","suburban communities":"UNP","metropolitan area":"UNP","metropolitan areas":"UNP",secteur:"UNP",secteurs:"UNP","local service district":"UNP","local service districts":"UNP",ir:"IR","indian reserve":"IR","indian reserves":"IR","réserve indienne":"IR","réserve indiennes":"IR",geog:"GEOG","comté":"GEOG",parish:"GEOG",parishes:"GEOG",paroisse:"GEOG",paroisses:"GEOG","geographic district":"GEOG","geographic districts":"GEOG",district:"GEOG",districts:"GEOG",royalty:"GEOG",royalties:"GEOG","geographic county":"GEOG","geographic counties":"GEOG",park:"PARK","réserve de la biosphère":"PARK","réserve de la biosphères":"PARK","world heritage site":"PARK","world heritage sites":"PARK","site du patrimoine mondial":"PARK","site du patrimoine mondials":"PARK","national historic site":"PARK","national historic sites":"PARK","lieu historique national":"PARK","lieu historique nationals":"PARK","national park":"PARK","national parks":"PARK","provincial park":"PARK","provincial parks":"PARK","parc de conservation":"PARK","parc de conservations":"PARK","parc de récréation":"PARK","parc de récréations":"PARK","international park":"PARK","international parks":"PARK","parc international":"PARK","parc internationals":"PARK","réserve écologique":"PARK","réserve écologiques":"PARK","parc national":"PARK","parc nationals":"PARK","réserve faunique":"PARK","réserve fauniques":"PARK","provincial historic site":"PARK","provincial historic sites":"PARK","national park reserve":"PARK","national park reserves":"PARK","réserve de parc national":"PARK","réserve de parc nationals":"PARK",waterway:"PARK",waterways:"PARK","voie navigable":"PARK","voie navigables":"PARK",canal:"PARK",canals:"PARK",mil:"MIL","canadian forces base":"MIL","canadian forces bases":"MIL","base des forces canadiennes":"MIL","canadian forces station":"MIL","canadian forces stations":"MIL","station des forces canadiennes":"MIL",riv:"RIV",river:"RIV",rivers:"RIV",brook:"RIV",brooks:"RIV",creek:"RIV",creeks:"RIV",fleuve:"RIV",fleuves:"RIV",branch:"RIV",branches:"RIV",millstream:"RIV",millstreams:"RIV",ruisseau:"RIV",ruisseaus:"RIV",stream:"RIV",streams:"RIV","rivière":"RIV","rivières":"RIV",fork:"RIV",forks:"RIV",channel:"RIV",channels:"RIV",rivf:"RIVF",bend:"RIVF",bends:"RIVF",reach:"RIVF",reaches:"RIVF",stillwater:"RIVF",stillwaters:"RIVF",courant:"RIVF",courants:"RIVF",stretch:"RIVF",stretches:"RIVF",fall:"FALL",falls:"FALL",chute:"FALL",chutes:"FALL",lake:"LAKE",lakes:"LAKE",pond:"LAKE",ponds:"LAKE",reservoir:"LAKE",reservoirs:"LAKE",lagoon:"LAKE",lagoons:"LAKE",barasway:"LAKE",barasways:"LAKE",flowage:"LAKE",flowages:"LAKE",loch:"LAKE",loches:"LAKE","mal bay":"LAKE","mal bays":"LAKE",lac:"LAKE",lacs:"LAKE",lagune:"LAKE",lagunes:"LAKE","réservoir":"LAKE","réservoirs":"LAKE",sprg:"SPRG",sea:"SEA",ocean:"SEA",oceans:"SEA",seas:"SEA",mer:"SEA",mers:"SEA","océan":"SEA","océans":"SEA",seaf:"SEAF",seau:"SEAU","abyssal plain":"SEAU","abyssal plains":"SEAU",plaine:"SEAU",plaines:"SEAU",bank:"SEAU",banks:"SEAU",banc:"SEAU",bancs:"SEAU",basin:"SEAU",basins:"SEAU",bassin:"SEAU",bassins:"SEAU",canyon:"SEAU",canyons:"SEAU","continental margin":"SEAU","continental margins":"SEAU","marge continentale":"SEAU","marge continentales":"SEAU",escarpment:"SEAU",escarpments:"SEAU",talus:"SEAU",taluses:"SEAU",fan:"SEAU",fans:"SEAU","cône":"SEAU","cônes":"SEAU",pingos:"SEAU","fracture zone":"SEAU","fracture zones":"SEAU","zone de fractures":"SEAU",gap:"SEAU",gaps:"SEAU",passage:"SEAU",passages:"SEAU",guyot:"SEAU",guyots:"SEAU",knoll:"SEAU",knolls:"SEAU","dôme":"SEAU","dômes":"SEAU","marginal trough":"SEAU","marginal troughs":"SEAU","cuvette marginale":"SEAU","cuvette marginales":"SEAU","median valley":"SEAU","median valleys":"SEAU","vallée axiale":"SEAU","vallée axiales":"SEAU",pass:"SEAU",passes:"SEAU","seamount chain":"SEAU","seamount chains":"SEAU","chaîne de monts":"SEAU",seamounts:"SEAU","monts sous-marins":"SEAU",ridge:"SEAU",ridges:"SEAU",dorsale:"SEAU",dorsales:"SEAU",rise:"SEAU",rises:"SEAU",massif:"SEAU",massifs:"SEAU",saddle:"SEAU",saddles:"SEAU",col:"SEAU",cols:"SEAU",shoal:"SEAU",shoals:"SEAU","haut-fond":"SEAU","haut-fonds":"SEAU",sill:"SEAU",sills:"SEAU",seuil:"SEAU",seuils:"SEAU",shelf:"SEAU",shelves:"SEAU","plate-forme continentale":"SEAU","plate-forme continentales":"SEAU",slope:"SEAU",slopes:"SEAU",pente:"SEAU",pentes:"SEAU",spur:"SEAU",spurs:"SEAU","éperon":"SEAU","éperons":"SEAU",terrace:"SEAU",terraces:"SEAU",terrasse:"SEAU",terrasses:"SEAU",trough:"SEAU",troughs:"SEAU",cuvette:"SEAU",cuvettes:"SEAU",valley:"SEAU",valleys:"SEAU","vallée":"SEAU","vallées":"SEAU",chan:"CHAN",chenal:"CHAN",chenals:"CHAN",narrows:"CHAN",strait:"CHAN",straits:"CHAN","détroit":"CHAN","détroits":"CHAN",rap:"RAP",rapids:"RAP",rapides:"RAP",rapide:"RAP",run:"RAP",runs:"RAP",bay:"BAY",bays:"BAY",cove:"BAY",coves:"BAY",estuaire:"BAY",estuaires:"BAY",fjord:"BAY",fjords:"BAY",gulf:"BAY",gulves:"BAY",havre:"BAY",havres:"BAY",sound:"BAY",sounds:"BAY",cape:"CAPE",capes:"CAPE",head:"CAPE",heads:"CAPE",peninsula:"CAPE",peninsulas:"CAPE","côte":"CAPE","côtes":"CAPE","presqu'île":"CAPE","presqu'îles":"CAPE",cap:"CAPE",caps:"CAPE",promontoire:"CAPE",promontoires:"CAPE",foreland:"CAPE",forelands:"CAPE",spit:"CAPE",spits:"CAPE",point:"CAPE",points:"CAPE",bch:"BCH",beach:"BCH",beaches:"BCH",bar:"BCH",bars:"BCH",dune:"BCH",dunes:"BCH",shl:"SHL",ledge:"SHL",ledges:"SHL",rock:"SHL",rocks:"SHL","récifs":"SHL",isl:"ISL",island:"ISL",islands:"ISL",isle:"ISL",isles:"ISL",archipelago:"ISL",archipelagos:"ISL",group:"ISL",groups:"ISL","île":"ISL","îles":"ISL",archipel:"ISL",archipels:"ISL",rocher:"ISL",rochers:"ISL",clf:"CLF",bluff:"CLF",bluffs:"CLF",falaise:"CLF",falaises:"CLF",escarpement:"CLF",escarpements:"CLF",cliffs:"CLF",coteau:"CLF",coteaus:"CLF",mtn:"MTN",range:"MTN",ranges:"MTN",mountain:"MTN",mountains:"MTN",peak:"MTN",peaks:"MTN",hill:"MTN",hills:"MTN",butte:"MTN",buttes:"MTN",pinnacles:"MTN",mount:"MTN",mounts:"MTN",mont:"MTN",monts:"MTN",foothills:"MTN",dome:"MTN",domes:"MTN",tower:"MTN",towers:"MTN",colline:"MTN",collines:"MTN",sommet:"MTN",sommets:"MTN","sand hills":"MTN",montagnes:"MTN","chaîne":"MTN","chaînes":"MTN",paroi:"MTN",parois:"MTN",vall:"VALL",trench:"VALL",trenches:"VALL",coulee:"VALL",coulees:"VALL",pln:"PLN",plateau:"PLN",plateaus:"PLN",plain:"PLN",plains:"PLN",uplands:"PLN",cave:"CAVE",grotte:"CAVE",grottes:"CAVE",crat:"CRAT",glac:"GLAC",glacier:"GLAC",glaciers:"GLAC",icefield:"GLAC",icefields:"GLAC","ice cap":"GLAC","ice caps":"GLAC",for:"FOR",vegl:"VEGL",meadow:"VEGL",meadows:"VEGL",marsh:"VEGL",marshes:"VEGL",misc:"MISC","centrale hydroélectrique":"MISC","centrale hydroélectriques":"MISC",port:"MISC",ports:"MISC",dam:"MISC",dams:"MISC",drain:"MISC",drains:"MISC",barrage:"MISC",barrages:"MISC","canal de dérivation":"MISC","canal de dérivations":"MISC",floodway:"MISC",floodways:"MISC",rail:"RAIL",road:"ROAD",air:"AIR",mar:"MAR",hydr:"HYDR",recr:"RECR",res:"RES",camp:"CAMP",site:"SITE"}}});
//# sourceMappingURL=geosearch.js.map